<Window x:Class="So.Controls.Samples.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sampleApp="clr-namespace:So.Controls.Samples"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:controls="clr-namespace:So.Controls;assembly=So.Controls"
        xmlns:browser="clr-namespace:So.Controls.Samples.Browser"
        xmlns:ap="clr-namespace:So.Controls.AttachedProperties;assembly=So.Controls"
        mc:Ignorable="d"
        Title="MainWindow" Height="350" Width="525" d:DataContext="{d:DesignInstance sampleApp:Vm,IsDesignTimeCreatable=True }">
    <Grid>
        <TabControl>
            <TabItem Header="TreeListView">
                <TabItem.Resources>
                    <HierarchicalDataTemplate DataType="{x:Type browser:DummyFolder}"
                                              ItemsSource="{Binding Children}">
                        <TextBlock Text="{Binding Name}" />
                    </HierarchicalDataTemplate>
                    <DataTemplate DataType="{x:Type browser:DummyFile}">
                        <TextBlock Text="{Binding Name}" />
                    </DataTemplate>
                </TabItem.Resources>
                <controls:TreeListView AllowsColumnReorder="True" ItemsSource="{Binding BrowserVm.RootFolder}">
                    <!--Create an item template to specify the ItemsSource-->
                    <controls:TreeListView.Columns>
                        <!--Create the first column containing the expand button and the type name.-->
                        <GridViewColumn Header="Name" Width="200">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <!--The Expander Button (can be used in any column (typically the first one))-->
                                        <controls:TreeListViewExpander/>
                                        <!--Display the name of the DataElement-->
                                        <TextBlock Text="{Binding Name}"/>
                                    </StackPanel>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <!--Create a second column containing the number of children.-->
                        <GridViewColumn Header="Type" Width="100">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Type}" HorizontalAlignment="Right"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </controls:TreeListView.Columns>
                </controls:TreeListView>
            </TabItem>
            <TabItem Header="ScrollSynchronizer">
                <TabItem.Resources>
                    <Style TargetType="ScrollViewer">
                        <Setter Property="controls:ScrollSynchronizer.ScrollGroup" Value="Group1" />
                    </Style>
                </TabItem.Resources>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <ListBox Grid.Column="0" ItemsSource="{Binding ScrollItems}"/>
                    <ListBox Grid.Column="1" ItemsSource="{Binding ScrollItems}"/>
                </Grid>
            </TabItem>
            <TabItem Header="EditableTextBlock">
                <StackPanel>
                    <GroupBox Header="Vanilla TextBlock">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Standard TextBlock: "/>
                            <TextBlock Text="{Binding DummyText}"/>
                        </StackPanel>
                    </GroupBox>
                    <Button>Lose focus here</Button>
                    <GroupBox Header="Editable TextBlock">
                        <StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Editable TextBlock: "/>
                                <controls:EditableTextBlock x:Name="EditableTextBlock" Text="{Binding DummyText}"/>
                            </StackPanel>
                            <CheckBox Content="SelectAllOnFocus" 
                                      IsChecked="{Binding ElementName=EditableTextBlock, Path=SelectAllTextOnFocus}"/>
                            <Grid ap:Grid.Rows="Auto Auto Auto Auto" 
                                  ap:Grid.Columns="auto 5 *">
                                <TextBlock ap:Grid.Cell="0 0" Text="IsFocused"/>
                                <TextBlock ap:Grid.Cell="0 2" Text="{Binding ElementName=EditableTextBlock,Path=IsFocused,Mode=OneWay}"/>
                                <TextBlock ap:Grid.Cell="1 0" Text="Focusable"/>
                                <TextBlock ap:Grid.Cell="1 2" Text="{Binding ElementName=EditableTextBlock,Path=Focusable,Mode=OneWay}"/>
                                <TextBlock ap:Grid.Cell="2 0" Text="IsReadOnly"/>
                                <TextBlock ap:Grid.Cell="2 2" Text="{Binding ElementName=EditableTextBlock,Path=IsReadOnly,Mode=OneWay}"/>
                            </Grid>

                        </StackPanel>
                    </GroupBox>
                </StackPanel>
            </TabItem>
            <TabItem Header="NumericBox">
                <StackPanel>
                    <controls:NumericBox x:Name="DoubleBox" Text="{Binding DummyDouble, UpdateSourceTrigger=PropertyChanged}" FontSize="48"/>
                    <CheckBox Content="UpdateWithMouseWheel" IsChecked="{Binding ElementName=DoubleBox, Path=UpdateWithMouseWheel}"/>
                </StackPanel>
            </TabItem>
            <TabItem Header="GridViewColumn.Width">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <ListView Grid.Row="0">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="Day"
                                            ap:GridViewColumn.ColumnWidth="2*"
                                            CellTemplate="{StaticResource DayOfWeekTemplate}"/>
                                <GridViewColumn Header="Date" 
                                            ap:GridViewColumn.ColumnWidth="*"
                                            CellTemplate="{StaticResource DateTemplate}"/>
                            </GridView>
                        </ListView.View>
                        <system:DateTime>2014-01-01</system:DateTime>
                        <system:DateTime>2014-01-02</system:DateTime>
                    </ListView>
                    <DataGrid Grid.Row="1">
                        <system:DateTime>2014-01-01</system:DateTime>
                        <system:DateTime>2014-01-02</system:DateTime>
                    </DataGrid>
                </Grid>

            </TabItem>
            <TabItem Header="Grid.Rows" >
                <Grid ap:Grid.Rows="* *"
                      ap:Grid.Columns="* *">
                    <Grid ap:Grid.Cell="0 0" 
                          ap:Grid.Rows="* *"
                          ap:Grid.Columns="* *" 
                          Background="Goldenrod">
                        <Rectangle ap:Grid.Cell="0 0" Fill="Blue"/>
                        <Rectangle ap:Grid.Cell="1 1" Fill="Red"/>
                    </Grid>
                    <Grid ap:Grid.Cell="1 0" 
                          ap:Grid.Rows="* *"
                          ap:Grid.Columns="* *" Background="Gainsboro">
                        <Rectangle ap:Grid.Cell="0 0" Fill="Blue"/>
                        <Rectangle ap:Grid.Cell="1 1" Fill="Red"/>
                    </Grid>
                </Grid>

            </TabItem>
            <TabItem Header="Canvas">
                <Grid ap:Grid.Rows="Auto *"
                      ap:Grid.Columns="* *">
                    <GroupBox ap:Grid.Cell="0 0" Header="X">
                        <Grid ap:Grid.Rows="Auto Auto Auto" ap:Grid.Columns="Auto *">
                            <TextBlock ap:Grid.Cell="0 0" Text="XPos"/>
                            <controls:NumericBox ap:Grid.Cell="0 1" Text="{Binding X, UpdateSourceTrigger=PropertyChanged}"/>
                            <TextBlock ap:Grid.Cell="1 0" Text="XSize"/>
                            <controls:NumericBox ap:Grid.Cell="1 1" Text="{Binding XSize, UpdateSourceTrigger=PropertyChanged}"/>
                            <ComboBox  Grid.Row="2" Grid.ColumnSpan="2"
                              ItemsSource="{Binding XRelatives}" 
                              SelectedItem="{Binding XpositionedRelative}"/>
                        </Grid>
                    </GroupBox>
                    <GroupBox ap:Grid.Cell="0 1" Header="Y">
                        <Grid ap:Grid.Rows="Auto Auto Auto" ap:Grid.Columns="Auto *">
                            <TextBlock ap:Grid.Cell="0 0" Text="YPos"/>
                            <controls:NumericBox ap:Grid.Cell="0 1" Text="{Binding Y, UpdateSourceTrigger=PropertyChanged}"/>
                            <TextBlock ap:Grid.Cell="1 0" Text="YSize"/>
                            <controls:NumericBox ap:Grid.Cell="1 1" Text="{Binding YSize, UpdateSourceTrigger=PropertyChanged}"/>
                            <ComboBox Grid.Row="2" Grid.ColumnSpan="2"
                              ItemsSource="{Binding YRelatives}" 
                              SelectedItem="{Binding YpositionedRelative}"/>
                        </Grid>
                    </GroupBox>

                    <Canvas x:Name="Canvas" Grid.ColumnSpan="2" Grid.Row="1">
                        <Grid Name="Crosshair" RenderTransformOrigin="0.5, 0.5" 
                              Width="{Binding ElementName=Canvas, Path=ActualWidth}" 
                              Height="{Binding ElementName=Canvas, Path=ActualHeight}">
                            <Line Name="Vertical"
                                  X1="{Binding Path=X}" 
                                  X2="{Binding Path=X}"
                                  Y1="0" 
                                  Y2="{Binding ElementName=Canvas, Path=ActualHeight}" 
                                  Stroke="Black"/>
                            <Line Name="Horizontal"
                                  X1="0"
                                  X2="{Binding ElementName=Canvas, Path=ActualWidth}"
                                  Y1="{Binding Path=Y}" 
                                  Y2="{Binding Path=Y}" 
                                  Stroke="Black"/>
                            <Grid.RenderTransform>
                                <ScaleTransform ScaleY="-1" ScaleX="1"/>
                            </Grid.RenderTransform>
                        </Grid>
                        <Ellipse Height="{Binding YSize}" Width="{Binding XSize}" Fill="DodgerBlue" 
                             ap:Canvas.X="{Binding X}"
                             ap:Canvas.XpositionRelativeTo="{Binding XpositionedRelative}"
                             ap:Canvas.Y="{Binding Y}" 
                             ap:Canvas.YpositionRelativeTo="{Binding YpositionedRelative}"/>
                    </Canvas>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
